{"ast":null,"code":"var _jsxFileName = \"/home/amina/restaurant_app/restaurant-staff-app/src/components/Profile/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProfileForm.module.css\";\nimport { updateOrderStatus } from \"../../store/order-actions\";\nimport { updateNotification } from \"../../store/staff-actions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderSummary = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [orderedItems, setOrderedItems] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [orderId, setOrderId] = useState(0);\n  const [foodPrepCheck, setFoodPrepCheck] = useState(false);\n  const [drinkPrepCheck, setDrinkPrepCheck] = useState(false);\n  const [person, setPerson] = useState(null);\n  useEffect(() => {\n    const fetchPerson = async () => {\n      const response = await fetch(\"/staff/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const person = responseData.slice(-1)[0];\n      setPerson(person);\n    };\n\n    fetchPerson().then().catch(err => console.log(err));\n  }, []);\n  console.log(\"person\", person);\n\n  const handleFoodPrep = () => {\n    if (!foodPrepCheck) {\n      setFoodPrepCheck(true);\n      dispatch(updateNotification(`Preparing food for order ${orderId}`, person.id));\n    }\n\n    if (foodPrepCheck) {\n      setFoodPrepCheck(false);\n      dispatch(updateNotification(`Food Prepared for order ${orderId}`, person.id));\n    }\n  };\n\n  const handleDrinkPrep = () => {\n    if (!drinkPrepCheck) {\n      setDrinkPrepCheck(true);\n      dispatch(updateNotification(`Preparing drink for order ${orderId}`, person.id));\n    }\n\n    if (drinkPrepCheck) {\n      setDrinkPrepCheck(false);\n      dispatch(updateNotification(`Drink prepared for order ${orderId}`, person.id));\n    }\n  };\n\n  const handleDeliver = () => {\n    dispatch(updateOrderStatus(orderId));\n  };\n\n  useEffect(() => {\n    const fetchOrderedItems = async () => {\n      const response = await fetch(\"/order/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const lastOrder = responseData.slice(-1)[0];\n      setOrderId(lastOrder.id);\n      const loadedItems = [];\n\n      for (let i in lastOrder.order_items) {\n        loadedItems.push({\n          id: i,\n          name: lastOrder.order_items[i].name,\n          quantity: lastOrder.order_items[i].quantity,\n          category: lastOrder.order_items[i].category\n        });\n      }\n\n      setOrderedItems(loadedItems);\n      setPrice(lastOrder.price);\n    };\n\n    fetchOrderedItems().then().catch(err => console.log(err));\n  }, []);\n  const meals = orderedItems.filter(item => item.category === \"Food\");\n  const drinks = orderedItems.filter(item => item.category === \"Drink\");\n  const foodList = meals.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.quantity,\n          children: [\"x \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  });\n  const drinkList = drinks.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.quantity,\n          children: [\"x \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  });\n\n  const waiterDashboard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.order,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [foodList.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: foodList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), drinkList.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Drinks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: drinkList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.total,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$ \", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.form,\n          onClick: handleDeliver,\n          children: \"Deliver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n\n  const barmanDashboard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.order,\n      children: drinkList.length !== 0 && /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: drinkPrepCheck,\n                onChange: handleDrinkPrep\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), \"Drinks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: drinkList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n\n  const chefDashboard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.order,\n      children: foodList.length !== 0 && /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: foodPrepCheck,\n                onChange: handleFoodPrep\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), \"Food\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: foodList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.profile,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order #\", orderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), person && person.role === \"Barman\" && barmanDashboard, person && person.role === \"Waiter\" && waiterDashboard, person && person.role === \"Chef\" && chefDashboard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderSummary, \"gNZzATuyfAvCS1b7a/xMD6x4Tq0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OrderSummary;\nexport default OrderSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderSummary\");","map":{"version":3,"sources":["/home/amina/restaurant_app/restaurant-staff-app/src/components/Profile/ProfileForm.js"],"names":["useEffect","useState","useSelector","useDispatch","Card","classes","updateOrderStatus","updateNotification","OrderSummary","dispatch","orderedItems","setOrderedItems","price","setPrice","orderId","setOrderId","foodPrepCheck","setFoodPrepCheck","drinkPrepCheck","setDrinkPrepCheck","person","setPerson","fetchPerson","response","fetch","ok","Error","responseData","json","slice","then","catch","err","console","log","handleFoodPrep","id","handleDrinkPrep","handleDeliver","fetchOrderedItems","lastOrder","loadedItems","i","order_items","push","name","quantity","category","meals","filter","item","drinks","foodList","map","drinkList","waiterDashboard","background","order","length","total","form","barmanDashboard","chefDashboard","profile","role"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProfileForm.module.css\";\nimport { updateOrderStatus } from \"../../store/order-actions\";\nimport { updateNotification } from \"../../store/staff-actions.js\";\n\nconst OrderSummary = () => {\n  const dispatch = useDispatch();\n\n  const [orderedItems, setOrderedItems] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [orderId, setOrderId] = useState(0);\n  const [foodPrepCheck, setFoodPrepCheck] = useState(false);\n  const [drinkPrepCheck, setDrinkPrepCheck] = useState(false);\n  const [person, setPerson] = useState(null);\n\n  useEffect(() => {\n    const fetchPerson = async () => {\n      const response = await fetch(\"/staff/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const person = responseData.slice(-1)[0];\n      setPerson(person);\n    };\n\n    fetchPerson()\n      .then()\n      .catch((err) => console.log(err));\n  }, []);\n\n  console.log(\"person\", person);\n\n  const handleFoodPrep = () => {\n    if (!foodPrepCheck) {\n      setFoodPrepCheck(true);\n      dispatch(\n        updateNotification(`Preparing food for order ${orderId}`, person.id)\n      );\n    }\n    if (foodPrepCheck) {\n      setFoodPrepCheck(false);\n      dispatch(\n        updateNotification(`Food Prepared for order ${orderId}`, person.id)\n      );\n    }\n  };\n\n  const handleDrinkPrep = () => {\n    if (!drinkPrepCheck) {\n      setDrinkPrepCheck(true);\n      dispatch(\n        updateNotification(`Preparing drink for order ${orderId}`, person.id)\n      );\n    }\n    if (drinkPrepCheck) {\n      setDrinkPrepCheck(false);\n      dispatch(\n        updateNotification(`Drink prepared for order ${orderId}`, person.id)\n      );\n    }\n  };\n\n  const handleDeliver = () => {\n    dispatch(updateOrderStatus(orderId));\n  };\n\n  useEffect(() => {\n    const fetchOrderedItems = async () => {\n      const response = await fetch(\"/order/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const lastOrder = responseData.slice(-1)[0];\n\n      setOrderId(lastOrder.id);\n\n      const loadedItems = [];\n      for (let i in lastOrder.order_items) {\n        loadedItems.push({\n          id: i,\n          name: lastOrder.order_items[i].name,\n          quantity: lastOrder.order_items[i].quantity,\n          category: lastOrder.order_items[i].category,\n        });\n      }\n      setOrderedItems(loadedItems);\n      setPrice(lastOrder.price);\n    };\n\n    fetchOrderedItems()\n      .then()\n      .catch((err) => console.log(err));\n  }, []);\n\n  const meals = orderedItems.filter((item) => item.category === \"Food\");\n  const drinks = orderedItems.filter((item) => item.category === \"Drink\");\n\n  const foodList = meals.map((item) => {\n    return (\n      <li className={classes.item} key={item.id}>\n        <div>\n          <span className={classes.name}>{item.name}</span>\n          <span className={classes.quantity}>x {item.quantity}</span>\n        </div>\n      </li>\n    );\n  });\n\n  const drinkList = drinks.map((item) => {\n    return (\n      <li className={classes.item} key={item.id}>\n        <div>\n          <span className={classes.name}>{item.name}</span>\n          <span className={classes.quantity}>x {item.quantity}</span>\n        </div>\n      </li>\n    );\n  });\n\n  const waiterDashboard = (\n    <div className={classes.background}>\n      <div className={classes.order}>\n        <Card>\n          {foodList.length !== 0 && (\n            <div>\n              <h3>Food</h3>\n              <ul>{foodList}</ul>\n            </div>\n          )}\n          {drinkList.length !== 0 && (\n            <div>\n              <h3>Drinks</h3>\n              <ul>{drinkList}</ul>\n            </div>\n          )}\n          <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>$ {price}</span>\n          </div>\n          <button className={classes.form} onClick={handleDeliver}>\n            Deliver\n          </button>\n        </Card>\n      </div>\n    </div>\n  );\n\n  const barmanDashboard = (\n    <div className={classes.background}>\n      <div className={classes.order}>\n        {drinkList.length !== 0 && (\n          <Card>\n            <div>\n              <div>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={drinkPrepCheck}\n                    onChange={handleDrinkPrep}\n                  />\n                  Drinks\n                </label>\n              </div>\n              <ul>{drinkList}</ul>\n            </div>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n\n  const chefDashboard = (\n    <div className={classes.background}>\n      <div className={classes.order}>\n        {foodList.length !== 0 && (\n          <Card>\n            <div>\n              <div>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={foodPrepCheck}\n                    onChange={handleFoodPrep}\n                  />\n                  Food\n                </label>\n              </div>\n              <ul>{foodList}</ul>\n            </div>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <section className={classes.profile}>\n      <h1>Order #{orderId}</h1>\n      {person && person.role === \"Barman\" && barmanDashboard}\n      {person && person.role === \"Waiter\" && waiterDashboard}\n      {person && person.role === \"Chef\" && chefDashboard}\n    </section>\n  );\n};\n\nexport default OrderSummary;\n"]},"metadata":{},"sourceType":"module"}