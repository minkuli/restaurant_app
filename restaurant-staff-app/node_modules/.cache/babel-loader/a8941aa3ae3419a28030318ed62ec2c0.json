{"ast":null,"code":"var _jsxFileName = \"/home/amina/restaurant_app/restaurant-staff-app/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csrftoken = Cookies.get(\"csrftoken\");\n\nconst AuthForm = () => {\n  _s();\n\n  const nameInputRef = useRef();\n  const roleInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredRole = roleInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {} else {\n      fetch(\"/staff/\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: enteredEmail,\n          role: enteredRole,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrftoken\n        }\n      }).then(res => {\n        if (res.ok) {// ...\n        } else {\n          return res.json().then(data => {\n            // show an error modal\n            console.log(data);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          required: true,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Your Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"role\",\n          required: true,\n          ref: roleInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"SpFW26cY5OftsjtUMCTxEGtALXc=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/amina/restaurant_app/restaurant-staff-app/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","Cookies","csrftoken","get","AuthForm","nameInputRef","roleInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredName","current","value","enteredRole","fetch","method","body","JSON","stringify","name","enteredEmail","role","returnSecureToken","headers","then","res","ok","json","data","console","log","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\nimport Cookies from \"js-cookie\";\n\nconst csrftoken = Cookies.get(\"csrftoken\");\n\nconst AuthForm = () => {\n  const nameInputRef = useRef();\n  const roleInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredRole = roleInputRef.current.value;\n\n    // optional: Add validation\n\n    if (isLogin) {\n    } else {\n      fetch(\"/staff/\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: enteredEmail,\n          role: enteredRole,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrftoken,\n        },\n      }).then((res) => {\n        if (res.ok) {\n          // ...\n        } else {\n          return res.json().then((data) => {\n            // show an error modal\n            console.log(data);\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"name\">Your Name</label>\n          <input type=\"text\" id=\"name\" required ref={nameInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"role\">Your Role</label>\n          <input type=\"text\" id=\"role\" required ref={roleInputRef} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}