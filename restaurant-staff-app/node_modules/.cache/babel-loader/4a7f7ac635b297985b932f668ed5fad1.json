{"ast":null,"code":"var _jsxFileName = \"/home/amina/restaurant_app/restaurant-staff-app/src/components/Profile/Notification.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Notification.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = () => {\n  _s();\n\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchStaffPerson = async () => {\n      const response = await fetch(\"/staff/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const newestNotifications = responseData.slice(-10);\n      console.log(\"notif \", responseData.filter(res => res.notification !== \"No new orders\"));\n      const loadedNotifications = [];\n\n      for (let i in newestNotifications) {\n        loadedNotifications.push({\n          id: newestNotifications[i].id,\n          role: newestNotifications[i].role,\n          name: newestNotifications[i].name,\n          notification: newestNotifications[i].notification\n        });\n      }\n\n      console.log(loadedNotifications);\n      setNotifications(loadedNotifications);\n    };\n\n    fetchStaffPerson().then().catch(err => console.log(err));\n  }, []);\n  const notificationsList = notifications.map(notification => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [notification.role, \" \", notification.name, \" says \\\"\", notification.notification, \"\\\"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.background,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.notifications,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: notificationsList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notification, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["/home/amina/restaurant_app/restaurant-staff-app/src/components/Profile/Notification.js"],"names":["useEffect","useState","useSelector","useDispatch","Card","classes","Notification","notifications","setNotifications","fetchStaffPerson","response","fetch","ok","Error","responseData","json","newestNotifications","slice","console","log","filter","res","notification","loadedNotifications","i","push","id","role","name","then","catch","err","notificationsList","map","item","container","background"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,gBAAgB,GAAG,YAAY;AACnC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,mBAAmB,GAAGF,YAAY,CAACG,KAAb,CAAmB,CAAC,EAApB,CAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CACE,QADF,EAEEL,YAAY,CAACM,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACC,YAAJ,KAAqB,eAAlD,CAFF;AAKA,YAAMC,mBAAmB,GAAG,EAA5B;;AACA,WAAK,IAAIC,CAAT,IAAcR,mBAAd,EAAmC;AACjCO,QAAAA,mBAAmB,CAACE,IAApB,CAAyB;AACvBC,UAAAA,EAAE,EAAEV,mBAAmB,CAACQ,CAAD,CAAnB,CAAuBE,EADJ;AAEvBC,UAAAA,IAAI,EAAEX,mBAAmB,CAACQ,CAAD,CAAnB,CAAuBG,IAFN;AAGvBC,UAAAA,IAAI,EAAEZ,mBAAmB,CAACQ,CAAD,CAAnB,CAAuBI,IAHN;AAIvBN,UAAAA,YAAY,EAAEN,mBAAmB,CAACQ,CAAD,CAAnB,CAAuBF;AAJd,SAAzB;AAMD;;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,mBAAZ;AACAf,MAAAA,gBAAgB,CAACe,mBAAD,CAAhB;AACD,KA1BD;;AA4BAd,IAAAA,gBAAgB,GACboB,IADH,GAEGC,KAFH,CAEUC,GAAD,IAASb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAFlB;AAGD,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA,QAAMC,iBAAiB,GAAGzB,aAAa,CAAC0B,GAAd,CAAmBX,YAAD,IAAkB;AAC5D,wBACE;AAAI,MAAA,SAAS,EAAEjB,OAAO,CAAC6B,IAAvB;AAAA,6BACE;AAAA,mBACGZ,YAAY,CAACK,IADhB,OACuBL,YAAY,CAACM,IADpC,cAEGN,YAAY,CAACA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATyB,CAA1B;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAAC8B,SAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE9B,OAAO,CAAC+B,UAAxB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE/B,OAAO,CAACE,aAAxB;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCACE;AAAA,wBAAKyB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7DD;;GAAM1B,Y;;KAAAA,Y;AA+DN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./Notification.module.css\";\n\nconst Notification = () => {\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchStaffPerson = async () => {\n      const response = await fetch(\"/staff/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n\n      const newestNotifications = responseData.slice(-10);\n      console.log(\n        \"notif \",\n        responseData.filter((res) => res.notification !== \"No new orders\")\n      );\n\n      const loadedNotifications = [];\n      for (let i in newestNotifications) {\n        loadedNotifications.push({\n          id: newestNotifications[i].id,\n          role: newestNotifications[i].role,\n          name: newestNotifications[i].name,\n          notification: newestNotifications[i].notification,\n        });\n      }\n      console.log(loadedNotifications);\n      setNotifications(loadedNotifications);\n    };\n\n    fetchStaffPerson()\n      .then()\n      .catch((err) => console.log(err));\n  }, []);\n\n  const notificationsList = notifications.map((notification) => {\n    return (\n      <li className={classes.item}>\n        <span>\n          {notification.role} {notification.name} says \"\n          {notification.notification}\"\"\n        </span>\n      </li>\n    );\n  });\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.background}>\n        <div className={classes.notifications}>\n          <Card>\n            <h2>Notifications</h2>\n            <div>\n              <ul>{notificationsList}</ul>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}