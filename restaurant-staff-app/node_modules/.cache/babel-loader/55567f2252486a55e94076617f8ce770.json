{"ast":null,"code":"var _jsxFileName = \"/home/amina/restaurant_app/restaurant-staff-app/src/components/Profile/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProfileForm.module.css\";\nimport { orderStateActions } from \"../../store/order\";\nimport { updateOrderStatus } from \"../../store/order-actions\";\nimport { updateNotification } from \"../../store/staff-actions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderSummary = () => {\n  _s();\n\n  const [orderedItems, setOrderedItems] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [orderId, setOrderId] = useState(0);\n  const [orderStatus, setOrderStatus] = useState({});\n  const role = useSelector(state => state.staff.role);\n  const dispatch = useDispatch();\n  const foodPrep = useSelector(state => state.orderState.food);\n  const drinkPrep = useSelector(state => state.orderState.drink);\n  const deliver = useSelector(state => state.orderState.deliver);\n  const [foodPrepCheck, setFoodPrepCheck] = useState(false);\n  const [drinkPrepCheck, setDrinkPrepCheck] = useState(false);\n  const [deliverCheck, setDeliverCheck] = useState(false);\n  useEffect(() => {\n    const fetchWaiter = async () => {\n      const response = await fetch(\"/staff/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const waiter = responseData.filter(person => person.role === \"Waiter\").slice(-1)[0];\n      console.log(waiter);\n    };\n\n    fetchWaiter().then().catch(err => console.log(err));\n  }, []);\n\n  const handleFoodPrep = () => {\n    if (!foodPrepCheck) {\n      setFoodPrepCheck(true);\n      dispatch(orderStateActions.startFoodPrep());\n      dispatch(updateOrderStatus({\n        food: \"preparing\",\n        drink: drinkPrep,\n        deliver: deliver\n      }, orderId));\n    }\n\n    if (foodPrepCheck) {\n      setFoodPrepCheck(false);\n      dispatch(orderStateActions.foodPrepared());\n      dispatch(updateOrderStatus({\n        food: \"prepared\",\n        drink: drinkPrep,\n        deliver: deliver\n      }, orderId));\n      dispatch(updateNotification(\"Food Prepared\"));\n    }\n  };\n\n  const handleDrinkPrep = () => {\n    if (!drinkPrepCheck) {\n      setDrinkPrepCheck(true);\n      dispatch(orderStateActions.startDrinkPrep());\n      dispatch(updateOrderStatus({\n        food: foodPrep,\n        drink: \"preparing\",\n        deliver: deliver\n      }, orderId));\n    }\n\n    if (drinkPrepCheck) {\n      setDrinkPrepCheck(false);\n      dispatch(orderStateActions.drinkPrepared());\n      dispatch(updateOrderStatus({\n        food: foodPrep,\n        drink: \"prepared\",\n        deliver: deliver\n      }, orderId));\n    }\n  };\n\n  const handleDeliver = () => {\n    if (meals.length !== 0 && drinks.length !== 0) {\n      if (orderStatus.food === \"prepared\" && orderStatus.drink === \"prepared\" && role === \"Waiter\") {\n        alert(\"Order is prepared\");\n        setDeliverCheck(true);\n      }\n    } else if (meals.length === 0 || drinks.length === 0) {\n      if (orderStatus.food === \"prepared\" || orderStatus.drink === \"prepared\" && role === \"Waiter\") {\n        alert(\"Order is prepared\");\n        setDeliverCheck(true);\n      }\n    }\n\n    dispatch(orderStateActions.deliver());\n    dispatch(updateOrderStatus({\n      food: foodPrep,\n      drink: drinkPrep,\n      deliver: \"delivered\"\n    }, orderId));\n    console.log(\"delivered\");\n  };\n\n  useEffect(() => {\n    const fetchOrderedItems = async () => {\n      const response = await fetch(\"/order/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const lastOrder = responseData.slice(-1)[0];\n      setOrderId(lastOrder.id);\n      setOrderStatus(lastOrder.status);\n      const loadedItems = [];\n\n      for (let i in lastOrder.order_items) {\n        loadedItems.push({\n          id: i,\n          name: lastOrder.order_items[i].name,\n          quantity: lastOrder.order_items[i].quantity,\n          category: lastOrder.order_items[i].category\n        });\n      }\n\n      setOrderedItems(loadedItems);\n      setPrice(lastOrder.price);\n    };\n\n    fetchOrderedItems().then().catch(err => console.log(err));\n  }, []);\n  const meals = orderedItems.filter(item => item.category === \"Food\");\n  const drinks = orderedItems.filter(item => item.category === \"Drink\");\n  const foodList = meals.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.quantity,\n          children: [\"x \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  });\n  const drinkList = drinks.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.quantity,\n          children: [\"x \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  });\n\n  const waiterDashboard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.order,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [foodList.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: foodList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), drinkList.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Drinks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: drinkList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.total,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$ \", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !deliverCheck,\n          className: classes.form,\n          onClick: handleDeliver,\n          children: \"Deliver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n\n  const barmanDashboard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.order,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: drinkList.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: drinkPrepCheck,\n                onChange: handleDrinkPrep\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), \"Drinks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: drinkList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n\n  const chefDashboard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.order,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: foodList.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: foodPrepCheck,\n                onChange: handleFoodPrep\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), \"Food\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: foodList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.profile,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order #\", orderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), role === \"Barman\" && barmanDashboard, role === \"Waiter\" && waiterDashboard, role === \"Chef\" && chefDashboard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderSummary, \"Q1bkdJKwi26TTWQ49GjGvs2e5qA=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = OrderSummary;\nexport default OrderSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderSummary\");","map":{"version":3,"sources":["/home/amina/restaurant_app/restaurant-staff-app/src/components/Profile/ProfileForm.js"],"names":["useEffect","useState","useSelector","useDispatch","Card","classes","orderStateActions","updateOrderStatus","updateNotification","OrderSummary","orderedItems","setOrderedItems","price","setPrice","orderId","setOrderId","orderStatus","setOrderStatus","role","state","staff","dispatch","foodPrep","orderState","food","drinkPrep","drink","deliver","foodPrepCheck","setFoodPrepCheck","drinkPrepCheck","setDrinkPrepCheck","deliverCheck","setDeliverCheck","fetchWaiter","response","fetch","ok","Error","responseData","json","waiter","filter","person","slice","console","log","then","catch","err","handleFoodPrep","startFoodPrep","foodPrepared","handleDrinkPrep","startDrinkPrep","drinkPrepared","handleDeliver","meals","length","drinks","alert","fetchOrderedItems","lastOrder","id","status","loadedItems","i","order_items","push","name","quantity","category","item","foodList","map","drinkList","waiterDashboard","background","order","total","form","barmanDashboard","chefDashboard","profile"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProfileForm.module.css\";\nimport { orderStateActions } from \"../../store/order\";\nimport { updateOrderStatus } from \"../../store/order-actions\";\nimport { updateNotification } from \"../../store/staff-actions.js\";\n\nconst OrderSummary = () => {\n  const [orderedItems, setOrderedItems] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [orderId, setOrderId] = useState(0);\n  const [orderStatus, setOrderStatus] = useState({});\n  const role = useSelector((state) => state.staff.role);\n  const dispatch = useDispatch();\n  const foodPrep = useSelector((state) => state.orderState.food);\n  const drinkPrep = useSelector((state) => state.orderState.drink);\n  const deliver = useSelector((state) => state.orderState.deliver);\n  const [foodPrepCheck, setFoodPrepCheck] = useState(false);\n  const [drinkPrepCheck, setDrinkPrepCheck] = useState(false);\n  const [deliverCheck, setDeliverCheck] = useState(false);\n\n  useEffect(() => {\n    const fetchWaiter = async () => {\n      const response = await fetch(\"/staff/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const waiter = responseData\n        .filter((person) => person.role === \"Waiter\")\n        .slice(-1)[0];\n      console.log(waiter);\n    };\n\n    fetchWaiter()\n      .then()\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleFoodPrep = () => {\n    if (!foodPrepCheck) {\n      setFoodPrepCheck(true);\n      dispatch(orderStateActions.startFoodPrep());\n      dispatch(\n        updateOrderStatus(\n          {\n            food: \"preparing\",\n            drink: drinkPrep,\n            deliver: deliver,\n          },\n          orderId\n        )\n      );\n    }\n    if (foodPrepCheck) {\n      setFoodPrepCheck(false);\n      dispatch(orderStateActions.foodPrepared());\n      dispatch(\n        updateOrderStatus(\n          {\n            food: \"prepared\",\n            drink: drinkPrep,\n            deliver: deliver,\n          },\n          orderId\n        )\n      );\n      dispatch(updateNotification(\"Food Prepared\"));\n    }\n  };\n\n  const handleDrinkPrep = () => {\n    if (!drinkPrepCheck) {\n      setDrinkPrepCheck(true);\n      dispatch(orderStateActions.startDrinkPrep());\n      dispatch(\n        updateOrderStatus(\n          {\n            food: foodPrep,\n            drink: \"preparing\",\n            deliver: deliver,\n          },\n          orderId\n        )\n      );\n    }\n    if (drinkPrepCheck) {\n      setDrinkPrepCheck(false);\n      dispatch(orderStateActions.drinkPrepared());\n      dispatch(\n        updateOrderStatus(\n          {\n            food: foodPrep,\n            drink: \"prepared\",\n            deliver: deliver,\n          },\n          orderId\n        )\n      );\n    }\n  };\n\n  const handleDeliver = () => {\n    if (meals.length !== 0 && drinks.length !== 0) {\n      if (\n        orderStatus.food === \"prepared\" &&\n        orderStatus.drink === \"prepared\" &&\n        role === \"Waiter\"\n      ) {\n        alert(\"Order is prepared\");\n        setDeliverCheck(true);\n      }\n    } else if (meals.length === 0 || drinks.length === 0) {\n      if (\n        orderStatus.food === \"prepared\" ||\n        (orderStatus.drink === \"prepared\" && role === \"Waiter\")\n      ) {\n        alert(\"Order is prepared\");\n        setDeliverCheck(true);\n      }\n    }\n    dispatch(orderStateActions.deliver());\n    dispatch(\n      updateOrderStatus(\n        {\n          food: foodPrep,\n          drink: drinkPrep,\n          deliver: \"delivered\",\n        },\n        orderId\n      )\n    );\n    console.log(\"delivered\");\n  };\n\n  useEffect(() => {\n    const fetchOrderedItems = async () => {\n      const response = await fetch(\"/order/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const lastOrder = responseData.slice(-1)[0];\n\n      setOrderId(lastOrder.id);\n      setOrderStatus(lastOrder.status);\n\n      const loadedItems = [];\n      for (let i in lastOrder.order_items) {\n        loadedItems.push({\n          id: i,\n          name: lastOrder.order_items[i].name,\n          quantity: lastOrder.order_items[i].quantity,\n          category: lastOrder.order_items[i].category,\n        });\n      }\n      setOrderedItems(loadedItems);\n      setPrice(lastOrder.price);\n    };\n\n    fetchOrderedItems()\n      .then()\n      .catch((err) => console.log(err));\n  }, []);\n\n  const meals = orderedItems.filter((item) => item.category === \"Food\");\n  const drinks = orderedItems.filter((item) => item.category === \"Drink\");\n\n  const foodList = meals.map((item) => {\n    return (\n      <li className={classes.item} key={item.id}>\n        <div>\n          <span className={classes.name}>{item.name}</span>\n          <span className={classes.quantity}>x {item.quantity}</span>\n        </div>\n      </li>\n    );\n  });\n\n  const drinkList = drinks.map((item) => {\n    return (\n      <li className={classes.item} key={item.id}>\n        <div>\n          <span className={classes.name}>{item.name}</span>\n          <span className={classes.quantity}>x {item.quantity}</span>\n        </div>\n      </li>\n    );\n  });\n\n  const waiterDashboard = (\n    <div className={classes.background}>\n      <div className={classes.order}>\n        <Card>\n          {foodList.length !== 0 && (\n            <div>\n              <h3>Food</h3>\n              <ul>{foodList}</ul>\n            </div>\n          )}\n          {drinkList.length !== 0 && (\n            <div>\n              <h3>Drinks</h3>\n              <ul>{drinkList}</ul>\n            </div>\n          )}\n          <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>$ {price}</span>\n          </div>\n          <button\n            disabled={!deliverCheck}\n            className={classes.form}\n            onClick={handleDeliver}\n          >\n            Deliver\n          </button>\n        </Card>\n      </div>\n    </div>\n  );\n\n  const barmanDashboard = (\n    <div className={classes.background}>\n      <div className={classes.order}>\n        <Card>\n          {drinkList.length !== 0 && (\n            <div>\n              <div>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={drinkPrepCheck}\n                    onChange={handleDrinkPrep}\n                  />\n                  Drinks\n                </label>\n              </div>\n              <ul>{drinkList}</ul>\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n\n  const chefDashboard = (\n    <div className={classes.background}>\n      <div className={classes.order}>\n        <Card>\n          {foodList.length !== 0 && (\n            <div>\n              <div>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={foodPrepCheck}\n                    onChange={handleFoodPrep}\n                  />\n                  Food\n                </label>\n              </div>\n              <ul>{foodList}</ul>\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n\n  return (\n    <section className={classes.profile}>\n      <h1>Order #{orderId}</h1>\n      {role === \"Barman\" && barmanDashboard}\n      {role === \"Waiter\" && waiterDashboard}\n      {role === \"Chef\" && chefDashboard}\n    </section>\n  );\n};\n\nexport default OrderSummary;\n"]},"metadata":{},"sourceType":"module"}