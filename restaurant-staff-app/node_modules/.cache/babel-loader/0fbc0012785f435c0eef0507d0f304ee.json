{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport { staffActions } from \"./staff\";\nconst csrftoken = Cookies.get(\"csrftoken\");\nexport const login = (name, role) => {\n  return async () => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/`, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": csrftoken\n        },\n        body: JSON.stringify({\n          name: name,\n          role: role\n        })\n      });\n\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      const loginRequest = await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateNotification = (notification, id) => {\n  return async dispatch => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"X-CSRFToken\": csrftoken\n        },\n        body: JSON.stringify({\n          notification\n        })\n      });\n\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/amina/restaurant_app/restaurant-staff-app/src/store/staff-actions.js"],"names":["Cookies","staffActions","csrftoken","get","login","name","role","sendRequest","response","fetch","method","headers","body","JSON","stringify","Error","loginRequest","error","console","log","updateNotification","notification","id","dispatch"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,SAASC,YAAT,QAA6B,SAA7B;AAEA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,WAAZ,CAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnC,SAAO,YAAY;AACjB,UAAMC,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,SAAF,EAAY;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,yBAAeT;AADR,SAF6B;AAKtCU,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,UAAAA,IAAI,EAAEA,IADa;AAEnBC,UAAAA,IAAI,EAAEA;AAFa,SAAf;AALgC,OAAZ,CAA5B;;AAUA,UAAI,CAACE,QAAL,EAAe;AACb,cAAM,IAAIO,KAAJ,CAAU,+BAAV,CAAN;AACD;AACF,KAdD;;AAgBA,QAAI;AACF,YAAMC,YAAY,GAAG,MAAMT,WAAW,EAAtC;AACD,KAFD,CAEE,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMG,kBAAkB,GAAG,CAACC,YAAD,EAAeC,EAAf,KAAsB;AACtD,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMhB,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASa,EAAG,EAAd,EAAiB;AAC3CZ,QAAAA,MAAM,EAAE,KADmC;AAE3CC,QAAAA,OAAO,EAAE;AACP,yBAAeT;AADR,SAFkC;AAK3CU,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,UAAAA;AADmB,SAAf;AALqC,OAAjB,CAA5B;;AASA,UAAI,CAACb,QAAL,EAAe;AACb,cAAM,IAAIO,KAAJ,CAAU,+BAAV,CAAN;AACD;AACF,KAbD;;AAeA,QAAI;AACF,YAAMR,WAAW,EAAjB;AACD,KAFD,CAEE,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GArBD;AAsBD,CAvBM","sourcesContent":["import Cookies from \"js-cookie\";\n\nimport { staffActions } from \"./staff\";\n\nconst csrftoken = Cookies.get(\"csrftoken\");\n\nexport const login = (name, role) => {\n  return async () => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/`, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": csrftoken,\n        },\n        body: JSON.stringify({\n          name: name,\n          role: role,\n        }),\n      });\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      const loginRequest = await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateNotification = (notification, id) => {\n  return async (dispatch) => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"X-CSRFToken\": csrftoken,\n        },\n        body: JSON.stringify({\n          notification,\n        }),\n      });\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}