{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport { updateOrderStatus } from \"./order-actions\";\nimport { orderStateActions } from \"./order\";\nconst csrftoken = Cookies.get(\"csrftoken\");\nexport const login = (name, role, id) => {\n  return async () => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/`, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": csrftoken\n        },\n        body: JSON.stringify({\n          name: name,\n          role: role\n        })\n      });\n\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateNotification = (notification, id) => {\n  return async dispatch => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"X-CSRFToken\": csrftoken\n        },\n        body: JSON.stringify({\n          notification\n        })\n      });\n\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/amina/restaurant_app/restaurant-staff-app/src/store/staff-actions.js"],"names":["Cookies","updateOrderStatus","orderStateActions","csrftoken","get","login","name","role","id","sendRequest","response","fetch","method","headers","body","JSON","stringify","Error","error","console","log","updateNotification","notification","dispatch"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,iBAAT,QAAkC,SAAlC;AAEA,MAAMC,SAAS,GAAGH,OAAO,CAACI,GAAR,CAAY,WAAZ,CAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,EAAb,KAAoB;AACvC,SAAO,YAAY;AACjB,UAAMC,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,SAAF,EAAY;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,yBAAeV;AADR,SAF6B;AAKtCW,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA,IAAI,EAAEA,IADa;AAEnBC,UAAAA,IAAI,EAAEA;AAFa,SAAf;AALgC,OAAZ,CAA5B;;AAUA,UAAI,CAACG,QAAL,EAAe;AACb,cAAM,IAAIO,KAAJ,CAAU,+BAAV,CAAN;AACD;AACF,KAdD;;AAgBA,QAAI;AACF,YAAMR,WAAW,EAAjB;AACD,KAFD,CAEE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMG,kBAAkB,GAAG,CAACC,YAAD,EAAed,EAAf,KAAsB;AACtD,SAAO,MAAOe,QAAP,IAAoB;AACzB,UAAMd,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASH,EAAG,EAAd,EAAiB;AAC3CI,QAAAA,MAAM,EAAE,KADmC;AAE3CC,QAAAA,OAAO,EAAE;AACP,yBAAeV;AADR,SAFkC;AAK3CW,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBM,UAAAA;AADmB,SAAf;AALqC,OAAjB,CAA5B;;AASA,UAAI,CAACZ,QAAL,EAAe;AACb,cAAM,IAAIO,KAAJ,CAAU,+BAAV,CAAN;AACD;AACF,KAbD;;AAeA,QAAI;AACF,YAAMR,WAAW,EAAjB;AACD,KAFD,CAEE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GArBD;AAsBD,CAvBM","sourcesContent":["import Cookies from \"js-cookie\";\nimport { updateOrderStatus } from \"./order-actions\";\nimport { orderStateActions } from \"./order\";\n\nconst csrftoken = Cookies.get(\"csrftoken\");\n\nexport const login = (name, role, id) => {\n  return async () => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/`, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": csrftoken,\n        },\n        body: JSON.stringify({\n          name: name,\n          role: role,\n        }),\n      });\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateNotification = (notification, id) => {\n  return async (dispatch) => {\n    const sendRequest = async () => {\n      const response = await fetch(`/staff/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"X-CSRFToken\": csrftoken,\n        },\n        body: JSON.stringify({\n          notification,\n        }),\n      });\n      if (!response) {\n        throw new Error(\"Updating notification failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}